<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-/mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.DreamBook.BookStoreService.mapper.book.BookMapper">


    <select id="maxNum" resultType="int">
        select nvl(max(bookId),0) from book
    </select>


    <select id="maxNumCart" resultType="int">
        select nvl(max(cartId),0) from cart
    </select>



        <insert id="insertData" parameterType="com.DreamBook.BookStoreService.dto.book.BookAddDTO">

        insert into book(bookId,memberId,bookName,bookContent,author,publisher,genre,
                         fileName,filePath,price,salesQuantity,bookLoan,views,publicationYear)
        values (#{bookId},#{memberId},#{bookName},#{bookContent},#{author},#{publisher},
                #{genre},#{fileName},#{filePath},#{price},#{salesQuantity},1,0,#{publicationYear})

        </insert>

    <insert id="bookCartInsertData" parameterType="com.DreamBook.BookStoreService.dto.book.BookCartDTO">

    insert into cart(cartId,memberId,bookId,amount)
    values (#{cartId},#{memberId},#{bookId},#{amount})

    </insert>

    <select id="bookList"  resultType="com.DreamBook.BookStoreService.dto.book.BookFindDTO">
        select distinct * from book



    </select>

    <select id="bookListPrice"  resultType="com.DreamBook.BookStoreService.dto.book.BookFindDTO">
        select distinct * from book
        where price = #{price}



    </select>

    <select id="bookAndReviewGrade" resultType="com.DreamBook.BookStoreService.dto.book.BookFindDTO">

        SELECT a.bookId,a.memberId,a.fileName,a.bookName,a.genre,a.PUBLISHER,a.author,a.price,round(AVG(b.grade))as grade,count(b.reviewId) as reviewId from book a
        left join review b on a.bookId = b.bookId


        WHERE   a.bookId IN

        <if test='bookAndReview.size ==0'>
            null
        </if>


        <foreach item="bookAndReview" collection="bookAndReview" open="(" close=")" separator=",">


                #{bookAndReview.bookId}



        </foreach>



        GROUP BY a.bookId,a.fileName,a.bookName,a.memberId,a.price,a.genre,a.PUBLISHER,a.author


    </select>


    <select id="bookAndReviewList" resultType="com.DreamBook.BookStoreService.dto.review.ReviewFindDTO">

        SELECT a.bookId,a.memberId,a.reviewSubject,a.reviewContent,a.reviewFileName,b.bookName,b.genre,b.PUBLISHER,b.author,b.price,AVG(a.grade)as grade,count(a.reviewId) as reviewId from review a
        left join book b on a.bookId = b.bookId

        WHERE   a.bookId IN

        <if test='bookAndReview.size ==0'>
            null
        </if>

        <foreach item="bookAndReview" collection="bookAndReview" open="(" close=")" separator=",">

            #{bookAndReview.bookId}


        </foreach>


        GROUP BY a.bookId,a.reviewSubject,a.reviewContent,a.reviewFileName,b.bookName,a.memberId,b.price,b.genre,b.PUBLISHER,b.author


    </select>

    <select id="SelectAllList" resultType="com.DreamBook.BookStoreService.dto.book.BookFindDTO">

        SELECT  *
        FROM (
        SELECT  ROW_NUMBER() OVER(ORDER by a.bookId asc) AS
        row_num,
        a.bookId,a.memberId,a.fileName,a.bookName,a.genre,a.PUBLISHER,a.author,a.price,round(AVG(b.grade))as grade,count(b.reviewId) as reviewId
        FROM book a  left join review b on a.bookId = b.bookId

        GROUP BY a.bookId,a.fileName,a.bookName,a.memberId,a.price,a.genre,a.PUBLISHER,a.author

        )
        <if test="firstRecordIndex !=null and lastRecordIndex != null">
            WHERE row_num > #{firstRecordIndex} AND
            #{lastRecordIndex} >=row_num
        </if>

    </select>

    <select id="testTableCount" resultType="int">
        SELECT count(*) FROM
            book
    </select>


    <select id="SelectHighPriceList" resultType="com.DreamBook.BookStoreService.dto.book.BookFindDTO">

        SELECT  *
        FROM (
        SELECT  ROW_NUMBER() OVER(ORDER by a.price desc) AS
        row_num,
        a.bookId,a.memberId,a.fileName,a.bookName,a.genre,a.PUBLISHER,a.author,a.price,round(AVG(b.grade))as grade,count(b.reviewId) as reviewId
        FROM book a  left join review b on a.bookId = b.bookId

        GROUP BY a.bookId,a.fileName,a.bookName,a.memberId,a.price,a.genre,a.PUBLISHER,a.author

        )
        <if test="firstRecordIndex !=null and lastRecordIndex != null">
            WHERE row_num > #{firstRecordIndex} AND
            #{lastRecordIndex} >=row_num
        </if>

    </select>


    <select id="SelectLowPriceList" resultType="com.DreamBook.BookStoreService.dto.book.BookFindDTO">

        SELECT  *
        FROM (
        SELECT  ROW_NUMBER() OVER(ORDER by a.price asc) AS
        row_num,
        a.bookId,a.memberId,a.fileName,a.bookName,a.genre,a.PUBLISHER,a.author,a.price,round(AVG(b.grade))as grade,count(b.reviewId) as reviewId
        FROM book a  left join review b on a.bookId = b.bookId

        GROUP BY a.bookId,a.fileName,a.bookName,a.memberId,a.price,a.genre,a.PUBLISHER,a.author

        )
        <if test="firstRecordIndex !=null and lastRecordIndex != null">
            WHERE row_num > #{firstRecordIndex} AND
            #{lastRecordIndex} >=row_num
        </if>

    </select>


    <select id="SelectManyOrders" resultType="com.DreamBook.BookStoreService.dto.book.BookFindDTO">

        SELECT  *
        FROM (
        SELECT  ROW_NUMBER() OVER(ORDER by  count(c.orderId) desc) AS
        row_num,
     a.bookId,a.memberId,a.fileName,a.bookName,a.genre,a.PUBLISHER,a.author,a.price, round(avg(b.grade))as grade,count(b.reviewId) as reviewId, count(c.orderId)
        FROM book a  left join review b on a.bookId = b.bookId left join orders c on b.bookId =c.bookId

        GROUP BY a.bookId,a.memberId,a.fileName,a.bookName,a.genre,a.PUBLISHER,a.author,a.price

        )
        <if test="firstRecordIndex !=null and lastRecordIndex != null">
            WHERE row_num > #{firstRecordIndex} AND
            #{lastRecordIndex} >=row_num
        </if>

    </select>

    <select id="SelectManyReview" resultType="com.DreamBook.BookStoreService.dto.book.BookFindDTO">

        SELECT  *
        FROM (
        SELECT  ROW_NUMBER() OVER(ORDER by  count(b.reviewId) desc) AS
        row_num,
        a.bookId,a.memberId,a.fileName,a.bookName,a.genre,a.PUBLISHER,a.author,a.price, round(avg(b.grade))as grade , count(b.reviewId)as reviewId
        FROM book a  left join review b on a.bookId = b.bookId

        GROUP BY a.bookId,a.memberId,a.fileName,a.bookName,a.genre,a.PUBLISHER,a.author,a.price

        )
        <if test="firstRecordIndex !=null and lastRecordIndex != null">
            WHERE row_num > #{firstRecordIndex} AND
            #{lastRecordIndex} >=row_num
        </if>

    </select>




    <select id="bookListManyReview"  resultType="com.DreamBook.BookStoreService.dto.book.BookFindDTO">

        SELECT a.bookId,a.memberId,a.fileName,a.bookName,a.genre,a.PUBLISHER,a.author,a.price,round(avg(b.grade))as grade,count(b.reviewId) as reviewId from book a
        left join review b on a.bookId = b.bookId


        WHERE a.bookId IN

        <foreach item="bookAndReview" collection="bookAndReview" open="(" close=")" separator=",">
            #{bookAndReview.bookId}
        </foreach>

        GROUP BY a.bookId,a.fileName,a.bookName,a.memberId,a.price,a.genre,a.PUBLISHER,a.author

        ORDER BY reviewId desc

    </select>


    <select id="genreSearch" parameterType="string"  resultType="com.DreamBook.BookStoreService.dto.book.BookFindDTO">


        SELECT a.bookId,a.memberId,a.fileName,a.bookName,a.genre,a.PUBLISHER,a.author,a.price,AVG(b.grade)as grade,count(b.reviewId) as reviewId
        from book a    left join review b on a.bookId = b.bookId
        where genre = #{genre}

        GROUP BY a.bookId,a.fileName,a.bookName,a.memberId,a.price,a.genre,a.PUBLISHER,a.author


    </select>


    <select id="genreSearchAll"  resultType="com.DreamBook.BookStoreService.dto.book.BookFindDTO">


        select * from book



    </select>


    <select id="bookPriceRange" parameterType="int"  resultType="com.DreamBook.BookStoreService.dto.book.BookFindDTO">


        select * from book

        where price >= #{price}



    </select>


    <select id="bookIdList"  resultType="com.DreamBook.BookStoreService.dto.book.BookFindDTO"
    parameterType="int">
        select * from book
        where bookId = #{bookId}



    </select>

    <select id="manyBookOrders" resultType="com.DreamBook.BookStoreService.dto.book.BookFindDTO">
        SELECT * from book

        WHERE bookId IN
        <foreach item="bookId" collection="bookId" open="(" close=")" separator=",">
            #{bookId}
        </foreach>


    </select>


    <select id="bookIdList2" resultType="com.DreamBook.BookStoreService.dto.book.BookFindDTO" parameterType="int">
        SELECT  a.* ,b.orderId from book a
        left join orders b on a.bookId = b.bookId


        WHERE b.bookId IN
        <foreach item="orderIdList" collection="orderIdList" open="(" close=")" separator=",">
            #{orderIdList.bookId}
        </foreach>

        and

        b.memberId = #{memberId}



        order by b.orderId asc


    </select>

    <select id="bookCartList"  resultType="com.DreamBook.BookStoreService.dto.book.BookDTO"
            parameterType="int">
        select  * from  book a
                           LEFT JOIN cart b ON
            a.bookId = b.bookId
                           LEFT JOIN member c ON
            b.memberId =c.memberId
        where b.memberId = #{memberId}
        ORDER BY b.bookId



    </select>


    <select id="orderBookCartList"  resultType="com.DreamBook.BookStoreService.dto.book.BookCartDTO"
            parameterType="com.DreamBook.BookStoreService.dto.book.BookCartDTO">
        select  * from  book a
                            LEFT JOIN cart b ON
            a.bookId = b.bookId
                            LEFT JOIN member c ON
            b.memberId =c.memberId
        where b.memberId = #{memberId}
        ORDER BY b.bookId



    </select>



<!--    <update id="update" parameterType="com.DreamBook.BookStoreService.dto.book.BookDTO">-->



<!--            UPDATE 	cart-->
<!--            SET		wishQuantity = #{bookDTO.wishQuantity}-->
<!--        WHERE	bookId in-->
<!--        <foreach item="bookCartList" collection="bookCartList" open="(" close=")" separator=",">-->
<!--            #{bookCartList.bookId}-->
<!--        </foreach>-->

<!--    </update>-->

    <update id="updateViews" parameterType="int">

        update book
        set    views = views+1
        where bookId =#{bookId}


    </update>



    <update id="updateWishQuantity" parameterType="com.DreamBook.BookStoreService.dto.book.BookCartDTO">

        update cart
        set    wishQuantity = wishQuantity+1
        WHERE	cartId = #{cartId} or bookId = #{bookId}

    </update>

    <update id="updateWishQuantityMinus"  parameterType="com.DreamBook.BookStoreService.dto.book.BookCartDTO" >

        update cart
        set    wishQuantity = wishQuantity-1
        WHERE	cartId = #{cartId} or bookId = #{bookId}

    </update>



    <select id="wishQuantityCheck">

    select wishQuantity from cart
        WHERE cartId  IN

        <foreach item="bookCartDTO" collection="bookCartDTO" open="(" close=")" separator=",">
            #{bookCartDTO.cartId}
        </foreach>

    </select>



    <update id="updateAmount" parameterType="com.DreamBook.BookStoreService.dto.book.BookCartDTO">

        update cart
        set    amount = wishQuantity * #{price}
        WHERE	cartId = #{cartId}  or bookId = #{bookId}

    </update>

    <select id="bookAndReview" resultType="com.DreamBook.BookStoreService.dto.book.BookFindDTO">
        SELECT a.bookId, avg(b.grade) from book a
        left join review b on a.bookId = b.bookId


        WHERE a.bookId IN

        <foreach item="bookAndReview" collection="bookAndReview" open="(" close=")" separator=",">
            #{bookAndReview.bookId}
        </foreach>

        group by a.bookId


    </select>









    <delete id="deleteCart"  parameterType="com.DreamBook.BookStoreService.dto.book.BookCartDTO" >

        delete  cart
        WHERE	cartId = #{cartId}

    </delete>

    <delete id="OrderDeleteCart"  parameterType="int" >

        delete  cart
        WHERE	cartId = #{cartId}

    </delete>







</mapper>
